
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.2.7.RELEASE</version>
  </parent>

  <groupId>com.soccerbuddy</groupId>
  <artifactId>soccerbuddy-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>soccerbuddy-parent</name>
  <description>The parent POM project that all the soccerbuddy components should inherit from.</description>
  <properties>
    <project.url>https://github.com/mystarrocks/soccer-buddy</project.url>
    <site.url>https://github.com/mystarrocks/soccer-buddy</site.url>
    <github.global.server>github</github.global.server>
    <site.deploy.id>gh-pages</site.deploy.id>
    <site.deploy.url>http://github.com/mystarrocks/soccer-buddy/tree/${site.deploy.id}/</site.deploy.url>
    <repositoryName>soccer-buddy</repositoryName>
    <repositoryOwner>mystarrocks</repositoryOwner>

    <java.version>1.8</java.version>
    <springboot.version>1.2.7.RELEASE</springboot.version>
    <springboot.devtools.version>1.3.0.M5</springboot.devtools.version>
    <google.datastore.version>v1beta2-rev1-3.0.2</google.datastore.version>
    <google.appengine.sdk.version>1.9.28</google.appengine.sdk.version>
    <objectify.version>5.1.9</objectify.version>
    <guava.version>18.0</guava.version>
    <apache.commons.lang.version>3.4</apache.commons.lang.version>
    <jackson.version>2.6.2</jackson.version>
    <slf4j.version>1.7.12</slf4j.version>
    <log4j.version>2.4.1</log4j.version>
    <lombok.version>1.16.6</lombok.version>
    <jsonpath.version>1.2.0</jsonpath.version>
    <junit.version>4.12</junit.version>
    <powermock.version>1.6.3</powermock.version>
    <mockito.version>1.10.19</mockito.version>
    <hamcrest.version>1.3</hamcrest.version>

    <jacoco.plugin.version>0.7.5.201505241946</jacoco.plugin.version>
    <github.site.plugin.version>0.12</github.site.plugin.version>
    <buildhelper.plugin.version>1.9.1</buildhelper.plugin.version>
    <site.plugin.version>3.4</site.plugin.version>
    <javadoc.plugin.version>2.10.3</javadoc.plugin.version>
    <source.plugin.version>2.4</source.plugin.version>
    <surefire.report.plugin.version>2.19</surefire.report.plugin.version>
    <project.info.reports.plugin.version>2.8.1</project.info.reports.plugin.version>
    <reflow.velocity.version>1.1.1</reflow.velocity.version>
    <velocity.version>1.7</velocity.version>
    
    <wagon.scm.extension.version>2.10</wagon.scm.extension.version>
    <plexus.scm.manager.extension.version>1.9.4</plexus.scm.manager.extension.version>
    <gitexe.scm.provider.extension.version>1.9.4</gitexe.scm.provider.extension.version>
  </properties>

  <url>${site.url}</url>
  <organization>
    <name>soccer-buddy</name>
    <url>${site.url}</url>
  </organization>

  <modules>
    <module>soccerbuddy-model</module>
    <module>soccerbuddy-data</module>
    <module>soccerbuddy-service</module>
  </modules>

  <scm>
    <connection>scm:git:git://github.com/mystarrocks/soccer-buddy.git</connection>
    <developerConnection>scm:git:git://github.com/mystarrocks/soccer-buddy.git</developerConnection>
    <url>${project.url}</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>${project.url}/issues</url>
  </issueManagement>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>manob2w</id>
      <name>Manoj Chandramohan</name>
      <timezone>+8</timezone>
      <url>https://github.com/manob2w</url>
    </developer>
    <developer>
      <id>mystarrocks</id>
      <name>Sunil Veeramuthu</name>
      <timezone>+5</timezone>
      <url>https://github.com/mystarrocks</url>
    </developer>
  </developers>

  <distributionManagement>
    <site>
      <id>${site.deploy.id}</id>
      <name>Deployment through GitHub's site deployment plugin</name>
      <url>${site.deploy.url}</url>
    </site>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <!-- Spring libraries -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${springboot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <version>${springboot.devtools.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-actuator</artifactId>
        <version>${springboot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${springboot.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-aop</artifactId>
        <version>${springboot.version}</version>
      </dependency>

      <!-- Jackson libraries -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <!-- Apache libraries -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${apache.commons.lang.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <!-- Google libraries -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.apis</groupId>
        <artifactId>google-api-services-datastore-protobuf</artifactId>
        <version>${google.datastore.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.appengine</groupId>
        <artifactId>appengine-api-1.0-sdk</artifactId>
        <version>${google.appengine.sdk.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.appengine</groupId>
        <artifactId>appengine-testing</artifactId>
        <version>${google.appengine.sdk.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.appengine</groupId>
        <artifactId>appengine-api-stubs</artifactId>
        <version>${google.appengine.sdk.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.appengine</groupId>
        <artifactId>appengine-api-labs</artifactId>
        <version>${google.appengine.sdk.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.appengine</groupId>
        <artifactId>appengine-tools-sdk</artifactId>
        <version>${google.appengine.sdk.version}</version>
      </dependency>
      <dependency>
        <groupId>com.googlecode.objectify</groupId>
        <artifactId>objectify</artifactId>
        <version>${objectify.version}</version>
      </dependency>

      <!-- Unit test related libraries -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-core</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4-rule-agent</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Other 3rd party libraries -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>
      <dependency>
        <groupId>com.jayway.jsonpath</groupId>
        <artifactId>json-path</artifactId>
        <version>${jsonpath.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4-rule-agent</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jacoco</groupId>
      <artifactId>org.jacoco.agent</artifactId>
      <classifier>runtime</classifier>
      <version>${jacoco.plugin.version}</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${buildhelper.plugin.version}</version>
          <executions>
            <execution>
              <id>add-test-source</id>
              <phase>process-resources</phase>
              <goals>
                <goal>add-test-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>src/it/java</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <executions>
            <execution>
              <id>default-test</id>
              <phase>test</phase>
              <goals>
                <goal>test</goal>
              </goals>
              <configuration>
                <systemPropertyVariables>
                  <jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
                </systemPropertyVariables>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <argLine>-XX:-UseSplitVerifier</argLine>
            <includes>
              <include>**/*Tests.java</include>
              <include>**/*Test.java</include>
            </includes>
            <excludes>
              <exclude>**/Abstract*.java</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <argLine>${failsafeArgLine} -noverify</argLine>
            <includes>
              <include>**/*ITs.java</include>
              <include>**/*IT.java</include>
            </includes>
            <excludes>
              <exclude>**/Abstract*.java</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.plugin.version}</version>
          <executions>
            <!-- Prepares the property pointing to the JaCoCo runtime agent 
              which is passed as VM argument when Maven the Surefire plugin is executed. -->
            <execution>
              <id>default-instrument</id>
              <goals>
                <goal>instrument</goal>
              </goals>
            </execution>
            <execution>
              <id>default-restore-instrumented-classes</id>
              <goals>
                <goal>restore-instrumented-classes</goal>
              </goals>
            </execution>
            <!-- Ensures that the code coverage report for unit tests is 
              created after unit tests have been run. -->
            <execution>
              <id>post-unit-test</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>pre-integration-test</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution 
                  data. -->
                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                <!-- Sets the name of the property containing the settings 
                  for JaCoCo runtime agent. -->
                <propertyName>failsafeArgLine</propertyName>
              </configuration>
            </execution>
            <!-- Ensures that the code coverage report for integration tests 
              after integration tests have been run. -->
            <execution>
              <id>post-integration-test</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <!-- Sets the path to the file which contains the execution 
                  data. -->
                <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                <!-- Sets the output directory for the code coverage report. -->
                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${site.plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>lt.velykis.maven.skins</groupId>
              <artifactId>reflow-velocity-tools</artifactId>
              <version>${reflow.velocity.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.velocity</groupId>
              <artifactId>velocity</artifactId>
              <version>${velocity.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <!-- Deploy site using github site plugin -->
            <skipDeploy>true</skipDeploy>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${project.info.reports.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${javadoc.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${source.plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>${surefire.report.plugin.version}</version>
        </plugin>
        <plugin>
          <!-- GitHub site plug-in for deployment to GitHub pages -->
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>${github.site.plugin.version}</version>
          <configuration>
            <server>github_soccer-buddy</server>
            <message>Creating site for ${project.artifactId}, ${project.version}</message>
            <!-- this does the trick to place every module in the correct subfolder -->
            <path />
            <merge>true</merge>
          </configuration>
          <executions>
            <execution>
              <id>github-site</id>
              <goals>
                <goal>site</goal>
              </goals>
              <phase>site-deploy</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
      </plugin>
    </plugins>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-scm</artifactId>
        <version>${wagon.scm.extension.version}</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-manager-plexus</artifactId>
        <version>${plexus.scm.manager.extension.version}</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-provider-gitexe</artifactId>
        <version>${gitexe.scm.provider.extension.version}</version>
      </extension>
    </extensions>
  </build>

  <profiles>
    <profile>
      <id>stage</id>
      <properties>
        <site.deploy.url>http://github.com/mystarrocks/soccer-buddy/tree/${site.deploy.id}/</site.deploy.url>
      </properties>

      <build>
        <plugins>
          <!-- Configure Maven site plugin to perform stage -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>${site.plugin.version}</version>
            <executions>
              <execution>
                <id>stage</id>
                <goals>
                  <goal>stage</goal>
                </goals>
                <phase>site</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

    </profile>
  </profiles>

  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <reportSets>
          <reportSet><!-- by default, id = "default" -->
            <reports><!-- select non-aggregate reports -->
              <report>javadoc</report>
              <report>test-javadoc</report>
            </reports>
          </reportSet>
          <reportSet><!-- aggregate reportSet, to define in poms having modules -->
            <id>aggregate</id>
            <inherited>false</inherited><!-- don't run aggregate in child 
              modules -->
            <reports>
              <report>aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <repositories>
    <repository>
      <id>spring-releases</id>
      <url>https://repo.spring.io/libs-release</url>
    </repository>
    <repository>
      <id>projectlombok.org</id>
      <url>http://projectlombok.org/mavenrepo</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>spring-releases</id>
      <url>https://repo.spring.io/libs-release</url>
    </pluginRepository>
  </pluginRepositories>
</project>